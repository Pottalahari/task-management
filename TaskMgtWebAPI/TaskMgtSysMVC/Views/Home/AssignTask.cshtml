
@{
    ViewBag.Title = "AssignTask";
}
@{
    ViewBag.Title = "AssignTask";
}

<!--<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User API - CRUD Operations</title>
</head>
<body>-->
    @*<h1>User API - CRUD Operations</h1>

        <h2>Add or Update User</h2>*@
    <!--<form id="userForm">
        <label for="UserId">User ID:</label>
        <input type="number" id="UserId" name="UserId" required>

        <label for="Email">Email:</label>
        <input type="text" id="Email" name="Email" required>

        <button type="button" onclick="validateUserAndRedirect()">Validate User</button>


    </form>

    <label id="responseMessage"></label>-->

    @*<div id="usersList"></div>*@

    <!--<script>
        const apiUrl = 'https://localhost:7243/api/User';  // User API endpoint for validation
        const taskPageUrl = '@Url.Action("Task", "Home")';  // Replace with the URL of your task assignment page

        // Function to validate user and redirect to task view if valid, or show an error if invalid
        function validateUserAndRedirect() {
            const userId = document.getElementById("UserId").value;

            if (!userId) {
                return displayMessage("Please enter User ID to validate", true);
            }

            // Step 1: Validate if the user exists
            fetch(`${apiUrl}/${userId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`User with ID ${userId} not found`);
                    }
                    return response.json();
                })
                .then(user => {
                    // If user exists, redirect to the task assignment page
                    window.location.href = taskPageUrl;  // Replace taskPageUrl with the actual task assignment page URL
                })
                .catch(error => {
                    displayMessage(`Error: ${error.message}`, true); // Display error message if user is not found
                });
        }

        // Display success or error messages
        function displayMessage(message, isError = false) {
            const responseLabel = document.getElementById("responseMessage");
            responseLabel.style.color = isError ? "red" : "green";
            responseLabel.textContent = message;
        }

    </script>
</body>
</html>-->
